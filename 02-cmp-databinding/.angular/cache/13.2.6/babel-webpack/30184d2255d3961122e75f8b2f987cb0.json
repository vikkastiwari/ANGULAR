{"ast":null,"code":"import _classCallCheck from \"D:\\\\Technologies\\\\fullstackLearning\\\\ANGULAR\\\\05-cmp-databinding\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Technologies\\\\fullstackLearning\\\\ANGULAR\\\\05-cmp-databinding\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nvar _c0 = [\"serverContent\"];\nexport var CockpitComponent = /*#__PURE__*/function () {\n  function CockpitComponent() {\n    _classCallCheck(this, CockpitComponent);\n\n    this.serverCreated = new EventEmitter();\n    this.bluePrintCreated = new EventEmitter(); // newServerName = '';\n\n    this.newServerContent = '';\n  }\n\n  _createClass(CockpitComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {}\n  }, {\n    key: \"onAddServer\",\n    value: function onAddServer(serverName) {\n      //   serverName - local reference technique\n      //   serverContent - two way binding technique\n      this.serverCreated.emit({\n        serverName: serverName.value,\n        serverContent: this.newServerContent\n      });\n    }\n  }, {\n    key: \"onAddBlueprint\",\n    value: function onAddBlueprint(serverName) {\n      this.bluePrintCreated.emit({\n        //   serverName: this.newServerName,\n        serverName: serverName.value,\n        serverContent: this.newServerContent\n      });\n    }\n  }]);\n\n  return CockpitComponent;\n}();\n\nCockpitComponent.ɵfac = function CockpitComponent_Factory(t) {\n  return new (t || CockpitComponent)();\n};\n\nCockpitComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CockpitComponent,\n  selectors: [[\"app-cockpit\"]],\n  viewQuery: function CockpitComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.serverContent = _t.first);\n    }\n  },\n  outputs: {\n    serverCreated: \"serverCreated\",\n    bluePrintCreated: \"bpCreated\"\n  },\n  decls: 17,\n  vars: 0,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [\"type\", \"text\", 1, \"form-control\"], [\"serverName\", \"\"], [\"serverContent\", \"\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function CockpitComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      var _r2 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\");\n      i0.ɵɵtext(3, \"Add new Servers or blueprints!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"Server Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2, 3);\n      i0.ɵɵelementStart(8, \"label\");\n      i0.ɵɵtext(9, \"Server Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 2, 4)(12, \"br\");\n      i0.ɵɵelementStart(13, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function CockpitComponent_Template_button_click_13_listener() {\n        i0.ɵɵrestoreView(_r2);\n\n        var _r0 = i0.ɵɵreference(7);\n\n        return ctx.onAddServer(_r0);\n      });\n      i0.ɵɵtext(14, \" Add Server \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function CockpitComponent_Template_button_click_15_listener() {\n        i0.ɵɵrestoreView(_r2);\n\n        var _r0 = i0.ɵɵreference(7);\n\n        return ctx.onAddBlueprint(_r0);\n      });\n      i0.ɵɵtext(16, \" Add Server Blueprint \");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb2NrcGl0LmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"sources":["D:/Technologies/fullstackLearning/ANGULAR/05-cmp-databinding/src/app/cockpit/cockpit.component.ts"],"names":["EventEmitter","i0","_c0","CockpitComponent","serverCreated","bluePrintCreated","newServerContent","serverName","emit","value","serverContent","ɵfac","CockpitComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","CockpitComponent_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","outputs","decls","vars","consts","template","CockpitComponent_Template","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","CockpitComponent_Template_button_click_13_listener","ɵɵrestoreView","_r0","ɵɵreference","onAddServer","CockpitComponent_Template_button_click_15_listener","onAddBlueprint","styles"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,IAAMC,GAAG,GAAG,CAAC,eAAD,CAAZ;AACA,WAAaC,gBAAb;AACI,8BAAc;AAAA;;AACV,SAAKC,aAAL,GAAqB,IAAIJ,YAAJ,EAArB;AACA,SAAKK,gBAAL,GAAwB,IAAIL,YAAJ,EAAxB,CAFU,CAGV;;AACA,SAAKM,gBAAL,GAAwB,EAAxB;AACH;;AANL;AAAA;AAAA,WAOI,oBAAW,CACV;AARL;AAAA;AAAA,WASI,qBAAYC,UAAZ,EAAwB;AACpB;AACA;AACA,WAAKH,aAAL,CAAmBI,IAAnB,CAAwB;AACpBD,QAAAA,UAAU,EAAEA,UAAU,CAACE,KADH;AAEpBC,QAAAA,aAAa,EAAE,KAAKJ;AAFA,OAAxB;AAIH;AAhBL;AAAA;AAAA,WAiBI,wBAAeC,UAAf,EAA2B;AACvB,WAAKF,gBAAL,CAAsBG,IAAtB,CAA2B;AACvB;AACAD,QAAAA,UAAU,EAAEA,UAAU,CAACE,KAFA;AAGvBC,QAAAA,aAAa,EAAE,KAAKJ;AAHG,OAA3B;AAKH;AAvBL;;AAAA;AAAA;;AAyBAH,gBAAgB,CAACQ,IAAjB,GAAwB,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAIV,gBAAV,GAAP;AAAuC,CAAtG;;AACAA,gBAAgB,CAACW,IAAjB,GAAwB,aAAcb,EAAE,CAACc,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAEb,gBAAR;AAA0Bc,EAAAA,SAAS,EAAE,CAAC,CAAC,aAAD,CAAD,CAArC;AAAwDC,EAAAA,SAAS,EAAE,SAASC,sBAAT,CAAgCC,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AAC7KnB,MAAAA,EAAE,CAACqB,WAAH,CAAepB,GAAf,EAAoB,CAApB;AACH;;AAAC,QAAIkB,EAAE,GAAG,CAAT,EAAY;AACV,UAAIG,EAAJ;;AACAtB,MAAAA,EAAE,CAACuB,cAAH,CAAkBD,EAAE,GAAGtB,EAAE,CAACwB,WAAH,EAAvB,MAA6CJ,GAAG,CAACX,aAAJ,GAAoBa,EAAE,CAACG,KAApE;AACH;AAAE,GALoD;AAKlDC,EAAAA,OAAO,EAAE;AAAEvB,IAAAA,aAAa,EAAE,eAAjB;AAAkCC,IAAAA,gBAAgB,EAAE;AAApD,GALyC;AAK0BuB,EAAAA,KAAK,EAAE,EALjC;AAKqCC,EAAAA,IAAI,EAAE,CAL3C;AAK8CC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,KAAJ,CAAD,EAAa,CAAC,CAAD,EAAI,WAAJ,CAAb,EAA+B,CAAC,MAAD,EAAS,MAAT,EAAiB,CAAjB,EAAoB,cAApB,CAA/B,EAAoE,CAAC,YAAD,EAAe,EAAf,CAApE,EAAwF,CAAC,eAAD,EAAkB,EAAlB,CAAxF,EAA+G,CAAC,CAAD,EAAI,KAAJ,EAAW,aAAX,EAA0B,CAA1B,EAA6B,OAA7B,CAA/G,CALtD;AAK6MC,EAAAA,QAAQ,EAAE,SAASC,yBAAT,CAAmCZ,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACpU,UAAMa,GAAG,GAAGhC,EAAE,CAACiC,gBAAH,EAAZ;;AACAjC,MAAAA,EAAE,CAACkC,cAAH,CAAkB,CAAlB,EAAqB,KAArB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,KAAlC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,GAA/C;AACAlC,MAAAA,EAAE,CAACmC,MAAH,CAAU,CAAV,EAAa,gCAAb;AACAnC,MAAAA,EAAE,CAACoC,YAAH;AACApC,MAAAA,EAAE,CAACkC,cAAH,CAAkB,CAAlB,EAAqB,OAArB;AACAlC,MAAAA,EAAE,CAACmC,MAAH,CAAU,CAAV,EAAa,aAAb;AACAnC,MAAAA,EAAE,CAACoC,YAAH;AACApC,MAAAA,EAAE,CAACqC,SAAH,CAAa,CAAb,EAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B;AACArC,MAAAA,EAAE,CAACkC,cAAH,CAAkB,CAAlB,EAAqB,OAArB;AACAlC,MAAAA,EAAE,CAACmC,MAAH,CAAU,CAAV,EAAa,gBAAb;AACAnC,MAAAA,EAAE,CAACoC,YAAH;AACApC,MAAAA,EAAE,CAACqC,SAAH,CAAa,EAAb,EAAiB,OAAjB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,EAAhC,EAAoC,IAApC;AACArC,MAAAA,EAAE,CAACkC,cAAH,CAAkB,EAAlB,EAAsB,QAAtB,EAAgC,CAAhC;AACAlC,MAAAA,EAAE,CAACsC,UAAH,CAAc,OAAd,EAAuB,SAASC,kDAAT,GAA8D;AAAEvC,QAAAA,EAAE,CAACwC,aAAH,CAAiBR,GAAjB;;AAAuB,YAAMS,GAAG,GAAGzC,EAAE,CAAC0C,WAAH,CAAe,CAAf,CAAZ;;AAA+B,eAAOtB,GAAG,CAACuB,WAAJ,CAAgBF,GAAhB,CAAP;AAA8B,OAA3K;AACAzC,MAAAA,EAAE,CAACmC,MAAH,CAAU,EAAV,EAAc,cAAd;AACAnC,MAAAA,EAAE,CAACoC,YAAH;AACApC,MAAAA,EAAE,CAACkC,cAAH,CAAkB,EAAlB,EAAsB,QAAtB,EAAgC,CAAhC;AACAlC,MAAAA,EAAE,CAACsC,UAAH,CAAc,OAAd,EAAuB,SAASM,kDAAT,GAA8D;AAAE5C,QAAAA,EAAE,CAACwC,aAAH,CAAiBR,GAAjB;;AAAuB,YAAMS,GAAG,GAAGzC,EAAE,CAAC0C,WAAH,CAAe,CAAf,CAAZ;;AAA+B,eAAOtB,GAAG,CAACyB,cAAJ,CAAmBJ,GAAnB,CAAP;AAAiC,OAA9K;AACAzC,MAAAA,EAAE,CAACmC,MAAH,CAAU,EAAV,EAAc,wBAAd;AACAnC,MAAAA,EAAE,CAACoC,YAAH;AACH;AAAE,GA1BoD;AA0BlDU,EAAAA,MAAM,EAAE,CAAC,yKAAD;AA1B0C,CAArB,CAAtC","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport * as i0 from \"@angular/core\";\r\nconst _c0 = [\"serverContent\"];\r\nexport class CockpitComponent {\r\n    constructor() {\r\n        this.serverCreated = new EventEmitter();\r\n        this.bluePrintCreated = new EventEmitter();\r\n        // newServerName = '';\r\n        this.newServerContent = '';\r\n    }\r\n    ngOnInit() {\r\n    }\r\n    onAddServer(serverName) {\r\n        //   serverName - local reference technique\r\n        //   serverContent - two way binding technique\r\n        this.serverCreated.emit({\r\n            serverName: serverName.value,\r\n            serverContent: this.newServerContent\r\n        });\r\n    }\r\n    onAddBlueprint(serverName) {\r\n        this.bluePrintCreated.emit({\r\n            //   serverName: this.newServerName,\r\n            serverName: serverName.value,\r\n            serverContent: this.newServerContent\r\n        });\r\n    }\r\n}\r\nCockpitComponent.ɵfac = function CockpitComponent_Factory(t) { return new (t || CockpitComponent)(); };\r\nCockpitComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CockpitComponent, selectors: [[\"app-cockpit\"]], viewQuery: function CockpitComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.serverContent = _t.first);\r\n    } }, outputs: { serverCreated: \"serverCreated\", bluePrintCreated: \"bpCreated\" }, decls: 17, vars: 0, consts: [[1, \"row\"], [1, \"col-xs-12\"], [\"type\", \"text\", 1, \"form-control\"], [\"serverName\", \"\"], [\"serverContent\", \"\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]], template: function CockpitComponent_Template(rf, ctx) { if (rf & 1) {\r\n        const _r2 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\");\r\n        i0.ɵɵtext(3, \"Add new Servers or blueprints!\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(4, \"label\");\r\n        i0.ɵɵtext(5, \"Server Name\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(6, \"input\", 2, 3);\r\n        i0.ɵɵelementStart(8, \"label\");\r\n        i0.ɵɵtext(9, \"Server Content\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(10, \"input\", 2, 4)(12, \"br\");\r\n        i0.ɵɵelementStart(13, \"button\", 5);\r\n        i0.ɵɵlistener(\"click\", function CockpitComponent_Template_button_click_13_listener() { i0.ɵɵrestoreView(_r2); const _r0 = i0.ɵɵreference(7); return ctx.onAddServer(_r0); });\r\n        i0.ɵɵtext(14, \" Add Server \");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(15, \"button\", 5);\r\n        i0.ɵɵlistener(\"click\", function CockpitComponent_Template_button_click_15_listener() { i0.ɵɵrestoreView(_r2); const _r0 = i0.ɵɵreference(7); return ctx.onAddBlueprint(_r0); });\r\n        i0.ɵɵtext(16, \" Add Server Blueprint \");\r\n        i0.ɵɵelementEnd()()();\r\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb2NrcGl0LmNvbXBvbmVudC5jc3MifQ== */\"] });\r\n"]},"metadata":{},"sourceType":"module"}